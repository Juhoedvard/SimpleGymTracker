// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                     String    @id @unique
  email                  String    @unique
  testUser               Boolean   @default(false)
  WorkOuts               WorkOut[]
  SavedWorkouts          SavedWorkout[]
  WorkoutExercises       WorkoutExercises[]
  stripeCustomerID       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionID   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model WorkOut {
  id               String             @id @default(cuid())
  name             String
  date             DateTime           @default(now())
  finished         Boolean            @default(false)
  user             User               @relation(fields: [userId], references: [id])
  userId           String
  WorkoutExercises WorkoutExercises[]

  @@index([userId])
}

model SavedWorkout {
  id               String             @id @default(cuid())
  name             String
  user             User               @relation(fields: [userId], references: [id])
  userId           String
  exercises       Exercise[] 

  @@index([userId])
}

model Exercise {
  id               String             @id @default(cuid())
  name             String             @unique
  gategory         String
  workoutId        String?
  WorkoutExercises WorkoutExercises[]
  savedWorkout     SavedWorkout       @relation(fields: [savedWorkoutId], references: [id])
  savedWorkoutId   String             @default("")

  @@index([savedWorkoutId])
  @@index([workoutId])
}

model Set {
  id         String   @id @default(cuid())
  reps       Int
  sets       Int
  weight     Int      @default(0)
  exercise   WorkoutExercises @relation(fields: [exerciseId], references: [id]) 
  exerciseId String

  @@index([exerciseId])
}

model WorkoutExercises {
  id              String   @id @default(cuid())
  workout         WorkOut?  @relation(fields: [workoutId], references: [id])
  workoutId       String   
  exercise        Exercise @relation(fields: [exerciseId], references: [id])
  user            User     @relation(fields: [userId], references: [id]) 
  userId          String  
  exerciseId      String
  sets            Set[]
  finished        Boolean  @default(false)

  @@index([userId])
  @@index([workoutId])
  @@index([exerciseId])
}
